<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About us" xml:space="preserve">
    <value>About us</value>
  </data>
  <data name="Azért alapítottuk ezt a céget, mert mi az ügyfeleinknek a legjobbat akarjuk. A cégünk a legfrisebb és a próblémához legjobban fekvő technológiákat használjuk, hiszen ezt érdemli mindenki aki egy szoftvert vásárol. A fő célünk ezzel, hogy az ügyfeleink kiemelkedjenek a piacon és így az innováció és a fejlődést jelképezzék ezzel a versenyképpeségüket növelve." xml:space="preserve">
    <value>Azért alapítottuk ezt a céget, mert mi az ügyfeleinknek a legjobbat akarjuk. A cégünk a legfrisebb és a próblémához legjobban fekvő technológiákat használjuk, hiszen ezt érdemli mindenki aki egy szoftvert vásárol. A fő célünk ezzel, hogy az ügyfeleink kiemelkedjenek a piacon és így az innováció és a fejlődést jelképezzék ezzel a versenyképpeségüket növelve.</value>
  </data>
  <data name="bbbb" xml:space="preserve">
    <value>bbbbasdasdad</value>
  </data>
  <data name="ccccccc" xml:space="preserve">
    <value>cccccccds</value>
  </data>
  <data name="How we create your dream" xml:space="preserve">
    <value>How we create your dream</value>
  </data>
  <data name="Image of how we work" xml:space="preserve">
    <value>Image of how we work</value>
  </data>
  <data name="Image of our company" xml:space="preserve">
    <value>Image of our company</value>
  </data>
  <data name="Image of what we work with" xml:space="preserve">
    <value>Image of what we work with</value>
  </data>
  <data name="Mi azt tartjuk szemelőtt, hogy te mit szeretnél. Segítűnk elkészíteni, kitalálni és tökéletesíteni az ötletedet. Úgy építettük fel a rendszert amivel dolgozunk, hogy a vevőt azaz téged tartunk szemelőtt, így az lesz az ötletedből amit te szeretnél. A másik fontos pontunk az volt hogy nem szeretnénk téged megvárakoztatni. A lehető leggyorsabban a kezedbe adunk egy rendszert amit már tudsz használni, és utána még azt fejleszzük tovább így akár már 2 hónapon belűl is használhatod azt amit megrendeltél. Ezt segíti az, hogy a szakmában a legjobbak közül választottunk és úgy választjuk ki a technológákat, hogy a te ötletedhez alkalmazkodjon." xml:space="preserve">
    <value>Mi azt tartjuk szemelőtt, hogy te mit szeretnél. Segítűnk elkészíteni, kitalálni és tökéletesíteni az ötletedet. Úgy építettük fel a rendszert amivel dolgozunk, hogy a vevőt azaz téged tartunk szemelőtt, így az lesz az ötletedből amit te szeretnél. A másik fontos pontunk az volt hogy nem szeretnénk téged megvárakoztatni. A lehető leggyorsabban a kezedbe adunk egy rendszert amit már tudsz használni, és utána még azt fejleszzük tovább így akár már 2 hónapon belűl is használhatod azt amit megrendeltél. Ezt segíti az, hogy a szakmában a legjobbak közül választottunk és úgy választjuk ki a technológákat, hogy a te ötletedhez alkalmazkodjon.</value>
  </data>
  <data name="Our company" xml:space="preserve">
    <value>Our company</value>
  </data>
  <data name="Why you should choose us" xml:space="preserve">
    <value>Why you should choose us</value>
  </data>
  <data name="With what we develop your dream" xml:space="preserve">
    <value>With what we develop your dream</value>
  </data>
</root>